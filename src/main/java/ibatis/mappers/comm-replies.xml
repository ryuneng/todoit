<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap
   PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
   "http://ibatis.apache.org/dtd/sql-map-2.dtd">
   
<sqlMap namespace="comm-replies">
	
	<!-- 댓글 입력 -->
	<insert id="insertCommReply" parameterClass="vo.CommReply">
		insert into comm_replies
    		(comm_reply_no, comm_reply_content, comm_no, user_no)
		values
    		(COMM_REPLIES_NO_SEQ.nextval, #content#, #community.no#, #user.no#)
	</insert>
	
	<!-- 대댓글 입력 -->
	<insert id="insertCommReReply" parameterClass="vo.CommReply">
		insert into comm_replies
    		(comm_reply_no, comm_reply_content, comm_no, user_no, comm_parents_reply)
		values
    		(COMM_REPLIES_NO_SEQ.nextval, #content#, #community.no#, #user.no#, #parentsReply#)
	</insert>
	
	<!-- 모든 댓글 조회 -->
	<select id="getRepliesByCommunityNo" parameterClass="int" resultClass="vo.CommReply">
		select
    		A.comm_reply_no 			as no, 
    		A.comm_reply_content		as content,
    		A.comm_reply_deleted        as deleted,
    		A.comm_reply_created_date   as createdDate,
    		A.comm_reply_updated_date   as updatedDate,
    		A.comm_danger_count         as dangerCnt,
    		A.user_no 				    as "user.no",
    		B.user_nickname			    as "user.nickname"
		from
    		comm_replies A,
    		users B
		where
    		A.comm_no = #value#
    		and A.user_no = B.user_no
    		and A.comm_reply_deleted = 'N'
    		and A.comm_parents_reply is null
		order by
     		A.comm_reply_no asc
	</select>
	
	<!-- 댓글 삭제 -->
	<update id="deleteCommReply" parameterClass="int">
		update
			comm_replies
		set
			comm_reply_deleted = 'Y'
		where
			comm_reply_no=#no#
	</update>
	
	<!-- 모든 대댓글 조회 -->
	<select id="getReReplies" parameterClass="int" resultClass="vo.CommReply">
		select 
    		a.comm_reply_no					as no,
    		a.comm_reply_content			as content,
    		a.comm_reply_deleted			as deleted,	
    		a.comm_reply_created_date		as createdDate,
    		a.comm_reply_updated_date		as updatedDate,
    		a.comm_danger_count				as dangerCnt,
    		a.user_no						as "user.no",
    		b.user_nickname					as "user.nickname"
		from 
    		comm_replies A,
    		users B
	where
    		a.comm_parents_reply = #parentsReply#
    		and a.user_no = b.user_no
    		and a.comm_reply_deleted = 'N'
	order by
    		a.comm_reply_no asc
	</select>
	
	<!-- 댓글 수정 -->
	<update id="updateCommReply" parameterClass="vo.CommReply">
		update
			comm_replies
		set
			comm_reply_content = #content#,
			comm_reply_updated_date = sysdate,
			comm_no = #community.no#,
			user_no = #user.no#
		where
			comm_reply_no = #no#
	</update>
	
	<!-- 댓글 1개 조회 -->
	<select id="getReplyByNo" parameterClass="int" resultClass="vo.CommReply">
		select
    		A.comm_reply_no 			as no, 
    		A.comm_reply_content		as content,
    		A.comm_reply_deleted        as deleted,
    		A.comm_reply_created_date   as createdDate,
    		A.comm_reply_updated_date   as updatedDate,
    		A.comm_danger_count         as dangerCnt,
    		A.comm_no					as "community.no",
    		A.user_no 				    as "user.no",
    		B.user_nickname			    as "user.nickname"
		from
    		comm_replies A,
    		users B
		where
    		A.comm_reply_no = #value#
    		and A.user_no = B.user_no
    		and A.comm_reply_deleted = 'N'
	</select>
	
	<!-- 해당 댓글에 대한 댓글 신고자 조회 -->
	<select id="getReplyDanger" parameterClass="vo.CommReplyDanger" resultClass="vo.CommReplyDanger">
		select
			comm_reply_no		as "commReply.no",
			user_no				as "user.no"
		from 
			comm_reply_danger
		where
			comm_reply_no = #commReply.no#
			and user_no = #user.no#
	</select>
	
	<!-- 해당 댓글에 댓글 신고자 추가 -->
	<insert id="addReplyDanger" parameterClass="vo.CommReplyDanger">
		insert into comm_reply_danger
		(comm_reply_no, user_no)
		values
		(#commReply.no#, #user.no#)
	</insert>
	
	<!-- 댓글번호로 신고수 조회해서 업데이트 -->
	<update id="updateReplyDangerCnt" parameterClass="vo.CommReplyDanger">
		update
			comm_replies
		set
			comm_danger_count = (select count(*)
								 from comm_reply_danger
								 where comm_reply_no = #commReply.no#)
		where
			comm_reply_no = #commReply.no#
	</update>
	
	<!-- 해당 댓글에 대한 좋아요 1개 조회 -->
	<select id="getReplyLike" parameterClass="vo.CommReplyLike" resultClass="vo.CommReplyLike">
		select
			comm_reply_no		as "commReply.no",
			user_no				as "user.no"
		from 
			comm_reply_likes
		where
			comm_reply_no = #commReply.no#
			and user_no = #user.no#
	</select>
	
	<!-- 해당 댓글에 좋아요한 사용자 추가 -->
	<insert id="addReplyLike" parameterClass="vo.CommReplyLike">
		insert into comm_reply_likes
		(comm_reply_no, user_no)
		values
		(#commReply.no#, #user.no#)
	</insert>
	
	<!-- 댓글번호로 좋아요수 조회 -->
	<select id="getReplyLikeCnt" parameterClass="int" resultClass="int">
		select
			count(*)
		from
			comm_reply_likes
		where
			comm_reply_no = #replyNo#
	</select>
	
</sqlMap>